<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Wemew.Program">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="Base.xaml" />
    </ResourceDictionary.MergedDictionaries>
    <!--几种按钮-->
    <Style x:Key="btnBase" TargetType="{x:Type Button}">
        <Setter Property="FontSize" Value="15"></Setter>
        <Setter Property="FontWeight" Value="Normal"></Setter>
        <Setter Property="FontFamily" Value="黑体"></Setter>
        <Setter Property="VerticalContentAlignment" Value="Center"></Setter>
        <Setter Property="VerticalAlignment" Value="Center"></Setter>
        <Setter Property="Foreground" Value="{StaticResource ButtonForeground}"></Setter>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border BorderBrush="#FF4493" BorderThickness="0" CornerRadius="4" Name="PART_Background">
                            <Border.Background>
                                <SolidColorBrush Color="#FF4493">
                                </SolidColorBrush>
                            </Border.Background>
                            <ContentPresenter Content="{TemplateBinding ContentControl.Content}" HorizontalAlignment="Center" VerticalAlignment="Center" />

                        </Border>
                        <Rectangle x:Name="DisabledVisualElement" Fill="#C0C0C0" IsHitTestVisible="false" Opacity="0" RadiusY="5" RadiusX="5"  />
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="Gold"></Setter>

                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Foreground" Value="#3399CC"></Setter>
                            <Setter Property="Background" Value="#F0F182"></Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="PART_Background" Value="#999999"></Setter>
                            <!--<Setter Property="Opacity" Value="0.7"  TargetName="DisabledVisualElement"/>-->
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="btnBaseCancel" TargetType="{x:Type Button}">
        <Setter Property="FontSize" Value="15"></Setter>
        <Setter Property="FontWeight" Value="Normal"></Setter>
        <Setter Property="FontFamily" Value="黑体"></Setter>
        <Setter Property="VerticalContentAlignment" Value="Center"></Setter>
        <Setter Property="VerticalAlignment" Value="Center"></Setter>
        <Setter Property="Foreground" Value="{StaticResource ButtonBackground}"></Setter>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border BorderBrush="#FF4493" BorderThickness="1" CornerRadius="4" Name="PART_Background">
                            <Border.Background>
                                <SolidColorBrush Color="#FFFFFF">
                                </SolidColorBrush>
                            </Border.Background>
                            <ContentPresenter Content="{TemplateBinding ContentControl.Content}" HorizontalAlignment="Center" VerticalAlignment="Center" />

                        </Border>
                        <Rectangle x:Name="DisabledVisualElement" Fill="#C0C0C0" IsHitTestVisible="false" Opacity="0" RadiusY="5" RadiusX="5"  />
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="Gold"></Setter>

                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Foreground" Value="#3399CC"></Setter>
                            <Setter Property="Background" Value="#F0F182"></Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="PART_Background" Value="#999999"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="btnBaseSelect" TargetType="{x:Type Button}">
        <Setter Property="FontSize" Value="15"></Setter>
        <Setter Property="FontWeight" Value="Bold"></Setter>
        <Setter Property="FontFamily" Value="黑体"></Setter>
        <Setter Property="VerticalContentAlignment" Value="Center"></Setter>
        <Setter Property="VerticalAlignment" Value="Center"></Setter>
        <Setter Property="Foreground" Value="{StaticResource ButtonBackground}"></Setter>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border BorderBrush="#FF4493" BorderThickness="0" CornerRadius="4" Name="PART_Background">
                            <Border.Background>
                                <SolidColorBrush Color="#FFFFFF">
                                </SolidColorBrush>
                            </Border.Background>
                            <ContentPresenter Content="{TemplateBinding ContentControl.Content}" HorizontalAlignment="Center" VerticalAlignment="Center" />

                        </Border>
                        <Rectangle x:Name="DisabledVisualElement" Fill="#FF4493" IsHitTestVisible="false" Opacity="0" RadiusY="5" RadiusX="5"  />
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="Gold"></Setter>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Foreground" Value="White"></Setter>
                            <Setter Property="Background" Value="#FF4493"></Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="PART_Background" Value="#999999"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="btnLogin" TargetType="{x:Type Button}">
        <Setter Property="FontSize" Value="16"></Setter>
        <Setter Property="FontWeight" Value="Normal"></Setter>
        <Setter Property="FontFamily" Value="微软雅黑"></Setter>
        <Setter Property="VerticalContentAlignment" Value="Center"></Setter>
        <Setter Property="VerticalAlignment" Value="Center"></Setter>
        <Setter Property="Foreground" Value="{StaticResource ButtonForeground}"></Setter>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border BorderBrush="#F03060" BorderThickness="0" CornerRadius="4" Name="PART_Background">
                            <Border.Background>
                                <SolidColorBrush Color="#F03060">
                                </SolidColorBrush>
                            </Border.Background>
                            <ContentPresenter Content="{TemplateBinding ContentControl.Content}" HorizontalAlignment="Center" VerticalAlignment="Center" />

                        </Border>
                        <Rectangle x:Name="DisabledVisualElement" Fill="#C0C0C0" IsHitTestVisible="false" Opacity="0" RadiusY="5" RadiusX="5"  />
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="Gold"></Setter>

                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Foreground" Value="#3399CC"></Setter>
                            <Setter Property="Background" Value="#F0F182"></Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="PART_Background" Value="#999999"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="btnSelect" TargetType="{x:Type Button}">
        <Setter Property="FontSize" Value="12"></Setter>
        <Setter Property="FontWeight" Value="Bold"></Setter>
        <Setter Property="FontFamily" Value="微软雅黑"></Setter>
        <Setter Property="VerticalContentAlignment" Value="Center"></Setter>
        <Setter Property="VerticalAlignment" Value="Center"></Setter>
        <Setter Property="Foreground" Value="Black"></Setter>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border BorderBrush="Black" BorderThickness="1" CornerRadius="12" Name="PART_Background">
                            <Border.Background>
                                <SolidColorBrush Color="Transparent">
                                </SolidColorBrush>
                            </Border.Background>
                            <ContentPresenter Content="{TemplateBinding ContentControl.Content}" HorizontalAlignment="Center" VerticalAlignment="Center" />

                        </Border>
                        <Rectangle x:Name="DisabledVisualElement" Fill="#C0C0C0" IsHitTestVisible="false" Opacity="0" RadiusY="5" RadiusX="5"  />
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="Gold"></Setter>

                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Foreground" Value="#3399CC"></Setter>
                            <Setter Property="Background" Value="Transparent"></Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="PART_Background" Value="#999999"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="btnBaseEnableFalse" TargetType="{x:Type Button}">
        <Setter Property="FontSize" Value="20"></Setter>
        <Setter Property="FontWeight" Value="Bold"></Setter>
        <Setter Property="FontFamily" Value="黑体"></Setter>
        <Setter Property="VerticalContentAlignment" Value="Center"></Setter>
        <Setter Property="VerticalAlignment" Value="Center"></Setter>
        <Setter Property="Foreground" Value="{Binding Path=Foreground}"></Setter>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border BorderBrush="#FF4B69" BorderThickness="0" CornerRadius="7" Name="PART_Background">
                            <Border.Background>
                                <SolidColorBrush Color="#999999">
                                </SolidColorBrush>
                            </Border.Background>
                            <ContentPresenter Content="{TemplateBinding ContentControl.Content}" HorizontalAlignment="Center" VerticalAlignment="Center" />

                        </Border>
                        <Rectangle x:Name="DisabledVisualElement" Fill="#C0C0C0" IsHitTestVisible="false" Opacity="0" RadiusY="5" RadiusX="5"  />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--水平渐变背景色-->
    <Style x:Key="CanvasBackGroundGrandient" TargetType="Canvas">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Background">
            <Setter.Value>
                <RadialGradientBrush GradientOrigin="0.5,0.5" RadiusX="1" RadiusY="1">
                    <GradientStop Color="#E05697" Offset="0" />
                    <GradientStop Color="#C24C83" Offset="0.5" />
                    <GradientStop Color="#E05697" Offset="0" />
                </RadialGradientBrush>
            </Setter.Value>

        </Setter>
    </Style>
    <!--下拉框-->
    <Style x:Key="comboxBase" TargetType="{x:Type ComboBox}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <!--  ComBoxItem  -->
                <Style TargetType="ComboBoxItem">
                    <Setter Property="MinHeight" Value="22" />
                    <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                    <Setter Property="MinWidth" Value="60" />
                    <Setter Property="Foreground" Value="#A6A6A6" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="ComboBoxItem">
                                <Border
                                    Name="Back"
                                    Padding="10"
                                    Background="Transparent"
                                    BorderBrush="Transparent"
                                    BorderThickness="0,0,0,0">
                                    <ContentPresenter
                                        Margin="0,0,0,0"
                                        HorizontalAlignment="Left"
                                        VerticalAlignment="Center"
                                        ContentSource="{Binding Source}" />
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="FontSize"  Value="16" />
                                        <Setter Property="Foreground"  Value="#FF4E98" />
                                    </Trigger>
                                    <Trigger Property="IsHighlighted" Value="True">
                                        <Setter TargetName="Back" Property="Background" Value="LightGray" />
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Border
                        Background="#00000000"
                        BorderBrush="Transparent"
                        CornerRadius="1">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition MaxWidth="30" />
                            </Grid.ColumnDefinitions>
                            <TextBox
                                Grid.Column="0"
                                Margin="4,0,0,0"
                                VerticalAlignment="Center"
                                Background="Transparent"
                                BorderThickness="0"
                                Foreground="#777"
                                IsReadOnly="{TemplateBinding IsReadOnly}"
                                Text="{TemplateBinding Text}" />
                            <ToggleButton
                                Grid.Column="1"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                ClickMode="Press"
                                IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                Style="{StaticResource ComboxStyleBtn}" />
                            <Popup
                                x:Name="Popup"
                                AllowsTransparency="True"
                                Focusable="False"
                                IsOpen="{TemplateBinding IsDropDownOpen}"
                                Placement="Bottom"
                                PopupAnimation="Slide">
                                <Border
                                    x:Name="DropDown"
                                    MinWidth="{TemplateBinding ActualWidth}"
                                    MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                    BorderThickness="1"
                                    CornerRadius="1"
                                    SnapsToDevicePixels="True">
                                    <Border.Effect>
                                        <DropShadowEffect
                                            BlurRadius="2"
                                            Opacity="0.5"
                                            ShadowDepth="0"
                                            Color="Black" />
                                    </Border.Effect>
                                    <ScrollViewer
                                        MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                        Margin="0"
                                        CanContentScroll="True"
                                        HorizontalScrollBarVisibility="Auto"
                                        SnapsToDevicePixels="True"
                                        Style="{DynamicResource WScrollviewer}"
                                        VerticalScrollBarVisibility="Auto">
                                        <!--  StackPanel 用于显示子级，方法是将 IsItemsHost 设置为 True  -->
                                        <StackPanel
                                            Background="White"
                                            IsItemsHost="True"
                                            KeyboardNavigation.DirectionalNavigation="Contained" />
                                    </ScrollViewer>
                                </Border>
                            </Popup>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--复选框-->
    <Style x:Key="chkBullet" TargetType="CheckBox">
        <Setter Property="IsChecked" Value="False"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="#999999"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <Grid>
                        <StackPanel  Orientation="Horizontal">
                            <Image  x:Name="IconImage" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" />
                        </StackPanel>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger  Property="IsChecked" Value="true">
                            <Setter  TargetName="IconImage" Property="Source" Value="../Assets/Images/btn_on.png"/>
                        </Trigger>
                        <Trigger  Property="IsChecked" Value="False">
                            <Setter  TargetName="IconImage" Property="Source" Value="../Assets/Images/btn_off.png"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="chkPassWord" TargetType="CheckBox">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="#ACABAB"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <Grid  x:Name="grid"  Margin="{TemplateBinding Padding}" VerticalAlignment="Center">
                        <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                            <Border  x:Name="border" BorderBrush="#ACABAB" BorderThickness="1"  Width="20" Height="20">
                                <Grid>
                                    <Rectangle  VerticalAlignment="Center" HorizontalAlignment="Center"
                                                x:Name="backGround" Width="20" Height="20" Fill="Transparent" ></Rectangle>
                                    <TextBlock  x:Name="text"  Text="✔" VerticalAlignment="Center" HorizontalAlignment="Center"
                                        FontSize="14" FontWeight="Bold"
                                        Foreground="White"/>
                                </Grid>
                            </Border>
                            <ContentPresenter VerticalAlignment="Center" Content="{TemplateBinding Content }">
                            </ContentPresenter>
                        </StackPanel>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger  Property="IsChecked" Value="true">
                            <Setter  TargetName="backGround" Property="Fill" Value="#FF4493"/>
                            <Setter  TargetName="text" Property="Visibility" Value="Visible"/>
                            <Setter  TargetName="border" Property="BorderBrush" Value="#FF4493"/>
                        </Trigger>
                        <Trigger  Property="IsChecked" Value="False">
                            <Setter  TargetName="backGround" Property="Fill" Value="Transparent"/>
                            <Setter  TargetName="text" Property="Visibility" Value="Hidden"/>
                            <Setter  TargetName="border" Property="BorderBrush" Value="#ACABAB"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ExpanderToggleButtonStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Background" Value="White"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid   Width="300" Height="{TemplateBinding Height}" 
                    Background="White" SnapsToDevicePixels="True">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="20"></ColumnDefinition>
                            <ColumnDefinition Width="240"></ColumnDefinition>
                        </Grid.ColumnDefinitions>

                        <Canvas x:Name="canvNormal" Visibility="Visible"  Background="Transparent" Height="20" Width="20"
                                         Grid.Column="0"   SnapsToDevicePixels="True" Canvas.Right="0">
                            <Image Source="/Assets/images/close.png" Width="20" Height="20" Stretch="Fill"  HorizontalAlignment="Stretch" VerticalAlignment="Center" ></Image>
                        </Canvas>
                        <Canvas x:Name="canvChecked" Visibility="Hidden"   Background="Transparent" Height="20" Width="20"
                     SnapsToDevicePixels="True" Canvas.Right="0">
                            <Image Source="/Assets/images/open.png" Width="20" Height="20" ></Image>
                        </Canvas>
                        <ContentPresenter  Grid.Column="1"
                                 SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                 VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Visibility" TargetName="canvChecked" Value="Visible" />
                            <Setter Property="Visibility" TargetName="canvNormal" Value="Hidden" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ExpanderStyle" TargetType="{x:Type Expander}">
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="FontFamily" Value="微软雅黑" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Expander}">
                    <Grid 
                            Background="{TemplateBinding Background}" SnapsToDevicePixels="True"
                            Width="260">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="25"></RowDefinition>
                            <RowDefinition></RowDefinition>
                        </Grid.RowDefinitions>
                        <ToggleButton x:Name="HeaderSite"  Grid.Row="0" Margin="{TemplateBinding Margin}"
                          ContentTemplate="{TemplateBinding HeaderTemplate}" 
                          ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"
                          Content="{TemplateBinding Header}"                                   
                          IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"                                  
                          Style="{StaticResource ExpanderToggleButtonStyle}" />
                        <ContentPresenter x:Name="ExpandSite" Grid.Row="1" 
                                              ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" 
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Margin}" Visibility="Collapsed" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="True">
                            <Setter Property="Visibility" TargetName="ExpandSite" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsExpanded" Value="false">
                            <Setter Property="Visibility" TargetName="ExpandSite" Value="Collapsed"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="ListBoxItem" x:Key="ListBoxItemEmptyTemplate">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <Border x:Name="BorderBackground" BorderBrush="Transparent" BorderThickness="0" Background="Transparent" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                            </MultiTrigger.Conditions>

                            <Setter Property="Background" TargetName="BorderBackground" Value="Transparent" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <DataTemplate x:Key="NetWorkVideoNodeTemplate"   >
        <Border x:Name="border" BorderThickness="0" BorderBrush="#EDEDED" Margin="0,0"  >
            <Grid  Margin="3,0" Width="250"  Height="95" Background="Transparent">
                <Grid.ColumnDefinitions  >
                    <ColumnDefinition Width="70" />
                    <ColumnDefinition  />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="40"></RowDefinition>
                    <RowDefinition Height="25"></RowDefinition>
                    <RowDefinition Height="30"></RowDefinition>
                </Grid.RowDefinitions>
                <Grid Grid.Column="1" Grid.Row="2">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition></ColumnDefinition>
                        <ColumnDefinition></ColumnDefinition>
                    </Grid.ColumnDefinitions>
                    <Button  x:Name="btnPreview" Width="60"  Height="20" FontSize="13" 
                                          VerticalAlignment="Center" Content="预览"  
                                           Style="{StaticResource btnBase}"></Button>
                    <Button Grid.Column="1" x:Name="downloadButton"
                                   Width="60"  Height="20" FontSize="13" VerticalAlignment="Center" Content="购买" 
                                    Style="{StaticResource btnBase }"></Button>
                </Grid>
            </Grid>
        </Border>
        <DataTemplate.Triggers>
            <DataTrigger   Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBoxItem}},Path=IsSelected}" Value="true">
                <Setter TargetName="border" Property="BorderBrush" Value="#FF4493" />
                <Setter TargetName="border" Property="BorderThickness" Value="2,0,0,0" />
            </DataTrigger>
        </DataTemplate.Triggers>

    </DataTemplate>

</ResourceDictionary>
   